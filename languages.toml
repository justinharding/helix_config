[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[[language]]
name = "python"
language-servers = [ "pyright", "ruff" ]

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.ruff]
command = "ruff-lsp"

[language-server.ruff.config.settings]
args = ["--ignore", "E501"]

[language.formatter]
command = "black"
args = ["--line-length", "88", "--quiet", "-"]

# [[language]]
# name = "json"
# config = { "provideFormatter" = true, "json" = { "keepLines" = { "enable" = true } } }

[[language]]
name = "markdown"
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"]}
# formatter = { command = 'prettier', args = ["--parser", "markdown"] }

# [[language]]
# name = "rust"
# language-servers = ["rust-analyzer"]
# scope = "source.rust"
# injection-regex = "rust"
# file-types = ["rs"]
# comment-token = "//"
# indent = { tab-width = 4, unit = "	"}
# auto-format = true

[language-server.rust-analyzer.config.check]
command = "clippy"

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

# [[language]]
# name = "json"
# formatter = { command = 'prettier', args = ["--parser", "json"] }

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"

[language-server.sql-language-server]
command = "sql-language-server"
args = ["up", "--method", "stdio"]

[[language]]
name = "sql"
language-servers = [ "sql-language-server" ]

[[language]]
name = "graphql"
indent = { tab-width = 4, unit = "    "}

